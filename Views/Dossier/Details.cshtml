@using linc.Models.Enumerations
@using linc.Utility
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model DossierDetailsViewModel

@{
    ViewData["Title"] = HtmlLocalizer["Dossier_DetailsPage_Title"];
}

@section Breadcrumbs {
    <!-- ======= Breadcrumbs ======= -->
    <section class="breadcrumbs">
        <div class="container">

            <div class="d-flex justify-content-between align-items-center">
                <h2>@ViewData["Title"]</h2>
                <ol>
                    <li>
                        <a href="/">@HtmlLocalizer["NavItem_Home"]</a>
                    </li>
                    <li>
                        <a asp-action="Index">@HtmlLocalizer["Dossier_List_Label"]</a>
                    </li>
                    <li>@HtmlLocalizer["Details_Label"]</li>
                </ol>
            </div>

        </div>
    </section>
    <!-- End Breadcrumbs -->
}

<h1>@Model.Title</h1>
<small>@HtmlLocalizer["Dossier_ListHeader_Status"]: @(EnumHelper<ApplicationDossierStatus>.GetDisplayName(Model.Status))</small>
            
<ul class="list-operations">
    @if (User.IsAtLeast(SiteRole.HeadEditor) || (User.Is(SiteRole.Editor) && User.GetUserId() == Model.AssignedToId))
    {
        <li>
            <a asp-action="Edit" asp-route-id="@Model.Id">@HtmlLocalizer["Edit_Label"]</a>
        </li>
    }
    else if (string.IsNullOrEmpty(Model.AssignedTo))
    {
        <li>
            <a asp-action="UpdateAssignee" asp-route-id="@Model.Id">
                @HtmlLocalizer["DossierDetails_AssignToMe"]
            </a>
        </li>
    }
    <li>
        <a asp-action="Index">
            @HtmlLocalizer["Dossier_BackToList_Label"]
        </a>
    </li>
</ul>

<hr/>

<div class="row">
    <div class="col-lg-9">
        <dl class="row">
            <dt class="col-sm-2">
                @HtmlLocalizer["DossierDetails_Authors"]
            </dt>
            <dd class="col-sm-10">
                @if (Model.Authors != null && Model.Authors.Count > 0)
                {
                    <ul>
                        @foreach (var author in Model.Authors)
                        {
                            <li>
                                @author.FirstName @author.LastName
                                (<a href="mailto:@author.Email">@author.Email</a>
                                @if (!string.IsNullOrEmpty(author.UserName))
                                {
                                    <text>, @author.UserName</text>
                                })
                            </li>
                        }
                    </ul>
                }
                else
                {
                    <span class="text-muted">@HtmlLocalizer["DossierDetails_NoAuthors"]</span>
                }
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.AuthorEmail)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.AuthorEmail)
            </dd>

            @if (string.IsNullOrEmpty(Model.AssignedTo))
            {
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.AssignedTo)
                </dt>
                <dd class="col-sm-10 bg-warning-subtle">
                    @HtmlLocalizer["Dossier_DetailsPage_NoEditorAssigned"]
                </dd>
            }
            else
            {
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.AssignedTo)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.AssignedTo)
                </dd>
            }
                    
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.DateCreated)
            </dt>
            <dd class="col-sm-10">
                @Model.DateCreated.ToString("f")
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.LastUpdated)
            </dt>
            <dd class="col-sm-10">
                @Model.LastUpdated.ToString("f")
            </dd>
        </dl>
                
        <hr />
                
        <table class="table table-hover">
            <thead class="table-light">
            <tr>
                <th class="col-md-2">
                    @HtmlLocalizer["DossierDocument_ListHeader_DocumentType"]
                </th>
                <th class="col-md-7">
                    @HtmlLocalizer["DossierDocument_ListHeader_OriginalFileName"]
                </th>
                <th class="text-center col-md-2">
                    @HtmlLocalizer["DossierDocument_ListHeader_DateCreated"]
                </th>
            </tr>
            </thead>
            <tbody>
            @foreach (var item in Model.Documents)
            {
                <tr>
                    <td class="col-md-2">
                        @Html.DisplayFor(modelItem => item.DocumentType)
                    </td>
                    <td class="col-md-8">
                                
                        <a asp-action="LoadDossierDocument" asp-controller="Document" asp-route-dossierId="@Model.Id" asp-route-documentId="@item.Id">
                            @Html.DisplayFor(modelItem => item.OriginalFileName)
                        </a>

                        @if (item.DocumentType is ApplicationDocumentType.Review or ApplicationDocumentType.SuperReview)
                        {
                            var dossierReview = Model.Reviews.First(x => x.ReviewId == item.Id);

                            var reviewerUserName = string.Empty;
                            if (dossierReview.Reviewer != null)
                            {
                                reviewerUserName = dossierReview.Reviewer.UserName;
                            }

                            <p>
                                <small>@HtmlLocalizer["Reviewer_Label"]: @dossierReview.Names (<a href="mailto:@dossierReview.Email" target="_blank">@dossierReview.Email</a>@(!string.IsNullOrEmpty(reviewerUserName) ? $", {reviewerUserName}" : string.Empty))</small>
                            </p>
                        }

                    </td>
                    <td class="text-center col-md-2">
                        @item.DateCreated.ToString("dd MMM yyyy")
                    </td>
                </tr>
            }
            </tbody>

        </table>

    </div>
    <div class="col-lg-3">
        <div class="journal-entries">
            @foreach (var entry in Model.Journals)
            {
                <p class="journal-entry">
                    <small>@entry.DateCreated.ToString("dd MMM yyyy HH:mm"), @entry.PerformedBy.Names</small><br/>
                            
                    @{
                        object[] messageArguments = { };
                        if (entry.MessageArguments != null)
                        {
                            messageArguments = new object[entry.MessageArguments.Length];
                            for (var index = 0; index < entry.MessageArguments.Length; index++)
                            {
                                messageArguments[index] = HtmlLocalizer[entry.MessageArguments[index]];
                            }
                        }
                    }

                    @HtmlLocalizer[entry.Message, messageArguments]

                </p>
            }
        </div>
    </div>
</div>

@section Newsletter {
    <partial name="Newsletter/_ReportBug" />
}